{"ast":null,"code":"import axios from \"axios\";\nexport default (async (req, res) => {\n  const {\n    query,\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      const abilityList = await axios.get(`${process.env.HOST_URL}/json/ability_info.json`);\n      console.log(typeof query.id); // if (abilityList[id]) {\n\n      res.status(200).json({}); // }\n      // throw new Error(\"Cannot find ability data\");\n\n      break;\n\n    default:\n      res.setHeader(\"Allow\", [\"GET\"]);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["F:/project/next/asd/pages/api/ability/[id].ts"],"names":["axios","req","res","query","method","abilityList","get","process","env","HOST_URL","console","log","id","status","json","setHeader","end"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AACnE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBH,GAA1B;;AAEA,UAAQG,MAAR;AACC,SAAK,KAAL;AACC,YAAMC,WAAW,GAAG,MAAML,KAAK,CAACM,GAAN,CACxB,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,yBADC,CAA1B;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOR,KAAK,CAACS,EAAzB,EAJD,CAKC;;AACAV,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAArB,EAND,CAOC;AAEA;;AACA;;AACD;AACCZ,MAAAA,GAAG,CAACa,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACAb,MAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBG,GAAhB,CAAqB,UAASZ,MAAO,cAArC;AAdF;AAgBA,CAnBD","sourcesContent":["import axios from \"axios\";\r\nimport { NextApiRequest, NextApiResponse } from \"next\";\r\n\r\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\r\n\tconst { query, method } = req;\r\n\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\tconst abilityList = await axios.get(\r\n\t\t\t\t`${process.env.HOST_URL}/json/ability_info.json`\r\n\t\t\t);\r\n\t\t\tconsole.log(typeof query.id);\r\n\t\t\t// if (abilityList[id]) {\r\n\t\t\tres.status(200).json({});\r\n\t\t\t// }\r\n\r\n\t\t\t// throw new Error(\"Cannot find ability data\");\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tres.setHeader(\"Allow\", [\"GET\"]);\r\n\t\t\tres.status(405).end(`Method ${method} Not Allowed`);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}