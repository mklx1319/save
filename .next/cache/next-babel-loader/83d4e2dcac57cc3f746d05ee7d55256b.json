{"ast":null,"code":"import axios from \"axios\";\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      const {\n        data: digimonList\n      } = await axios.get(`${process.env.HOST_URL}/json/digimon_info.json`);\n      const digimon = digimonList[parseInt(id.toString())];\n\n      if (digimon) {\n        res.status(200).json(digimon);\n        break;\n      }\n\n      res.status(404).end(`Cannot find digimon data`);\n      break;\n\n    default:\n      res.setHeader(\"Allow\", [\"GET\"]);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["F:/project/next/asd/pages/api/digimon/[id].ts"],"names":["axios","req","res","method","data","digimonList","get","process","env","HOST_URL","digimon","parseInt","id","toString","status","json","end","setHeader"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;;AAEA,UAAQE,MAAR;AACC,SAAK,KAAL;AACC,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAwB,MAAML,KAAK,CAACM,GAAN,CAClC,GAAEC,OAAO,CAACC,GAAR,CAAYC,QAAS,yBADW,CAApC;AAIA,YAAMC,OAAO,GAAGL,WAAW,CAACM,QAAQ,CAACC,EAAE,CAACC,QAAH,EAAD,CAAT,CAA3B;;AACA,UAAIH,OAAJ,EAAa;AACZR,QAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,OAArB;AACA;AACA;;AAEDR,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,GAAhB,CAAqB,0BAArB;AACA;;AAED;AACCd,MAAAA,GAAG,CAACe,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACAf,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBE,GAAhB,CAAqB,UAASb,MAAO,cAArC;AAjBF;AAmBA,CAtBD","sourcesContent":["import axios from \"axios\";\r\nimport { NextApiRequest, NextApiResponse } from \"next\";\r\nimport { StatInfo } from \"./interface\";\r\n\r\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\r\n\tconst { method } = req;\r\n\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\tconst { data: digimonList } = await axios.get<StatInfo[]>(\r\n\t\t\t\t`${process.env.HOST_URL}/json/digimon_info.json`\r\n\t\t\t);\r\n\r\n\t\t\tconst digimon = digimonList[parseInt(id.toString())];\r\n\t\t\tif (digimon) {\r\n\t\t\t\tres.status(200).json(digimon);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tres.status(404).end(`Cannot find digimon data`);\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tres.setHeader(\"Allow\", [\"GET\"]);\r\n\t\t\tres.status(405).end(`Method ${method} Not Allowed`);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}