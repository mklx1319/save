{"ast":null,"code":"import fetch from \"fetch\";\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      const data = await fetch(\"/json/ability_info.json\");\n      const abilityList = data.json();\n\n      if (abilityList[id]) {\n        res.status(200).json(abilityList[id]);\n      }\n\n      throw new Error(\"Cannot find ability data\");\n      break;\n\n    default:\n      res.setHeader(\"Allow\", [\"GET\"]);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n});","map":{"version":3,"sources":["F:/project/next/asd/pages/api/ability/[id].ts"],"names":["fetch","req","res","query","id","method","data","abilityList","json","status","Error","setHeader","end"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,gBAAe,OAAOC,GAAP,EAA4BC,GAA5B,KAAqD;AACnE,QAAM;AACLC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KADF;AAELC,IAAAA;AAFK,MAGFJ,GAHJ;;AAKA,UAAQI,MAAR;AACC,SAAK,KAAL;AACC,YAAMC,IAAI,GAAG,MAAMN,KAAK,CAAC,yBAAD,CAAxB;AACA,YAAMO,WAAW,GAAGD,IAAI,CAACE,IAAL,EAApB;;AAEA,UAAID,WAAW,CAACH,EAAD,CAAf,EAA+B;AAC9BF,QAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqBD,WAAW,CAACH,EAAD,CAAhC;AACA;;AAED,YAAM,IAAIM,KAAJ,CAAU,0BAAV,CAAN;AACA;;AACD;AACCR,MAAAA,GAAG,CAACS,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACAT,MAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBG,GAAhB,CAAqB,UAASP,MAAO,cAArC;AAbF;AAeA,CArBD","sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport fetch from \"fetch\";\r\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\r\n\tconst {\r\n\t\tquery: { id },\r\n\t\tmethod,\r\n\t} = req;\r\n\r\n\tswitch (method) {\r\n\t\tcase \"GET\":\r\n\t\t\tconst data = await fetch(\"/json/ability_info.json\");\r\n\t\t\tconst abilityList = data.json();\r\n\r\n\t\t\tif (abilityList[id as string]) {\r\n\t\t\t\tres.status(200).json(abilityList[id as string]);\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error(\"Cannot find ability data\");\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tres.setHeader(\"Allow\", [\"GET\"]);\r\n\t\t\tres.status(405).end(`Method ${method} Not Allowed`);\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}